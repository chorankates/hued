#!/usr/bin/env ruby
# hued - CLI for Hued module

# TODO this could be better in the cases where the gem is installed - but conditionals about requiring are.. not fun
require sprintf('%s/../lib/hued.rb', File.expand_path(File.dirname(__FILE__)))

require 'socket'

def parse_input
  options = Hash.new

  parser = OptionParser.new do |o|
    o.on('--ip <ip>', 'IP address of Phillips Hue Hub') do |p|
      options[:ip] = p
    end
    o.on('--token <token>', 'whitelisted token') do |p|
      options[:token] = p
    end
  end

  parser.parse!
  options
end

face    = ARGV.first
options = parse_input

puts "face: #{face}"
puts "options: #{options}"

a = Hued::Application.new(options)

if face.eql?('impersonate')
  a.impersonate
elsif face.eql?('demo')
  a.demo
elsif face.eql?('backup')
  # download all configs/settings
  a.hub.backup
elsif face.eql?('restore')
  # restore all configs/settings
  a.hub.restore
else
  a.repl
end
